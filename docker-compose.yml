version: '3.8'
services:
  # Infrastructure Services
  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.2
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - microservices-network

  kafka:
    image: confluentinc/cp-kafka:7.3.2
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper
    networks:
      - microservices-network

  # Application Services
  # api-gateway:
  #   build:
  #     context: ./api-gateway
  #     dockerfile: Dockerfile
  #   ports:
  #     - "3000:3000"
  #   environment:
  #     - NODE_ENV=development
  #     - AUTH_SERVICE_URL=http://auth-service:3001
  #     - USER_SERVICE_URL=http://user-service:3002
  #   depends_on:
  #     - kafka
  #     - auth-service
  #     - user-service
  #   networks:
  #     - microservices-network
  #   volumes:
  #     - ./api-gateway:/app
  #     - /app/node_modules
  #   command: npm run dev

  auth-service:
    build:
      context: ./auth-service
      dockerfile: Dockerfile
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=development
      - KAFKA_BROKERS=kafka:29092
      - PORT=3001
    depends_on:
      - kafka
    networks:
      - microservices-network
    volumes:
      - ./auth-service:/app
      - /app/node_modules
    command: npm run dev

  # user-service:
  #   build:
  #     context: ./user-service
  #     dockerfile: Dockerfile
  #   ports:
  #     - "3002:3002"
  #   environment:
  #     - NODE_ENV=development
  #     - KAFKA_BROKERS=kafka:29092
  #     - PORT=3002
  #   depends_on:
  #     - kafka
  #   networks:
  #     - microservices-network
  #   volumes:
  #     - ./user-service:/app
  #     - /app/node_modules
  #   command: npm run dev

networks:
  microservices-network:
    driver: bridge
